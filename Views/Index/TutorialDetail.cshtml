
@{
    ViewBag.Title = "Bài hướng dẫn";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .body-content .body { margin-left: 0px; }
    .menu.left { display: none }
</style>

<!-- add after bootstrap.min.css -->
<link rel="stylesheet" href="https://cdn.rawgit.com/afeld/bootstrap-toc/v0.4.1/dist/bootstrap-toc.min.css">

<!-- add after bootstrap.min.js -->
<script src="https://cdn.rawgit.com/afeld/bootstrap-toc/v0.4.1/dist/bootstrap-toc.min.js"></script>

<link href="~/lib/jquery-comment/css/jquery-comments.css" rel="stylesheet" />
<script src="~/lib/jquery-comment/js/jquery-comments.js"></script>
<script src="~/lib/jquery-comment/data/comments-data.js"></script>

@model TutorialDetailView
@using QAP4.ViewModels

@{ var posts = Model.Posts;}
@{ var tutorial = Model.Tutorial;}
@{ var relatedPosts = Model.RelatedPosts;}

<div class="container posts tutorial-view no-padding">
    <!--posts clone in posts detail-->
    <div class="container posts-detail-form">
        <div class="col-lg-2 col-md-2">

        </div>

        <div class="posts col-lg-8 col-md-8 col-xs-12 col-sm-12 no-padding">
            <!--post content-->
            <article class="article border-bottom">
                <div class="container padding-base">
                    @if (!string.IsNullOrEmpty(posts?.Title))
                    {
                        <h1 class="title-post-in-detail center">@posts.Title</h1>
                    }
                    else
                    {
                        <h1 class="title-post-in-detail center">Chưa có tiêu đề</h1>
                    }
                    <div class="info">
                        <div class="title center">
                            <a href="/users/@posts?.OwnerUserId"
                               class="">
                                @posts?.UserDisplayName
                            </a>
                            <span>
                                viết vào ngày @String.Format("{0:M/d/yyyy HH:mm}", @posts?.CreationDate)
                            </span>
                        </div>
                    </div>
                    <div class="body demo-section wide k-content" itemprop="articalBody">
                        <div id="ArticalBody" class="inner inner-width">
                            @Html.Raw(posts?.HtmlContent)
                        </div>
                    </div>

                    <div class="right">
                        <div class="title full-width">
                            <a href="/users/@posts?.OwnerUserId"
                               class="link">
                                @posts?.UserDisplayName
                            </a>
                        </div>
                        @*<div class="caption full-width"><span>Thanh Lãm-Hà Đông, gày 6, tháng 8</span></div>*@
                    </div>
                </div>
            </article>


            <!-- help edit -->
            @if (posts == null)
            {
                <div class="container help-edit border-bottom padding-base">
                    <p class="italic bold green italic left">Chưa có phần bài hướng dẫn nào, bạn hãy thêm bài hướng dẫn nhé >> &emsp; </p>
                    <a href="/editors?u_i=@Model?.User?.Id&po_i=@posts?.Id&po_t=@posts?.PostTypeId&po_lst_t=@posts?.PostTypeId&pr_i=@posts?.ParentId">
                        <div class="ui green tiny button left">
                            <i class="edit icon"></i>
                            Thêm bài hướng dẫn
                        </div>
                    </a>
                </div>
            }
            else
            {
                <div class="container help-edit border-bottom padding-base">
                    <p class="italic bold green italic left">Bạn có thể viết nháp để giúp tác giả chỉnh sửa bài viết được đúng và hay hơn. Hãy >> &emsp; </p>
                    <a href="/editors?u_i=@Model?.User?.Id&po_i=@posts.Id&po_t=@posts?.PostTypeId&po_lst_t=@posts?.PostTypeId">
                        <div class="ui green tiny button left">
                            <i class="edit icon"></i>
                            Chỉnh giúp
                        </div>
                    </a>
                </div>

                <!--comment-->
                <span class="header-text"><i class="comments icon"></i>Bình luận</span>
                <div class="container comment padding-base border-bottom"></div>
            }

        </div>

        <div class="right-nav col-lg-2 col-md-2"></div>

    </div>
</div>

<!--menu right-->
<div class="container posts right">
    <div class="ui dividing left rail">
        <div class="ui fixed top left scroll-pull-up" style="left: 40px; top: 200px; max-width:30vh">
            <!--table of content tutorial-->
            <div class="fixed left toc-tutorial">
                <span class="header-text padding-bottom-base">@tutorial.Title</span>
                @if (relatedPosts != null && relatedPosts.Any())
                {
                    <span class="caption grey">@relatedPosts.Count() bài viết</span>
                    <div class="ui secondary vertical @*pointing*@ menu">
                        @foreach (var item in relatedPosts)
                        {
                            <a href="/posts/@tutorial.Id?po_br_i=@item.Key"
                               class="item">
                                @item.Value
                            </a>
                        }
                    </div>
                }
            </div>

        </div>
    </div>


    <!--table of content-->
    <div class="container menu-outline">
        <div class="ui dividing right rail">
            <div class="ui fixed top right scroll-pull-up padding-base" style="right: 40px; top: 200px; width:30vh">
                <h4 class="sub-title title scroll-show" style="max-width:25vh; display:none">@posts?.Title</h4>
                <div class="full-width"><i class="bookmark icon pointer"></i><i class="print icon pointer"></i></div>
                <div class="scroll-to-comment-hide">
                    <span class="header-text"><i class="unordered list icon"></i>Đầu mục bài viết</span>
                    <nav id="toc" class="full-width left" style="max-height:70vh; overflow-y:scroll"></nav>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container full-width action-posts">
    <div class="item pointer table-of-list-btn">
        <i class="ui icon sitemap"></i>
    </div>
</div>
<div class="ui green vertical table-of-list sidebar menu" style="z-index:100000">
    <!--table of content tutorial-->
    <div class="container toc-tutorial">
        <span class="header-text padding-bottom-base">@tutorial?.Title</span>
        @if (relatedPosts != null && relatedPosts.Any())
        {
            <span class="caption grey">@relatedPosts.Count() bài viết</span>
            <div class="ui secondary vertical @*pointing*@ menu">
                @foreach (var item in relatedPosts)
                {
                    <a href="/posts/@tutorial.Id?po_br_i=@item.Key"
                       class="item">
                        @item.Value
                    </a>
                }
            </div>
        }
    </div>
</div>



<script src="~/js/posts_detail.js"></script>

<!--comment handle-->
<script>

    //slide bar menu
    $('.table-of-list-btn').click(function () {
        $('.table-of-list.sidebar')
            .sidebar('setting', 'transition', 'overlay')
            .sidebar('toggle')
            ;
    });

    var page = 1;

    $(function () {

        //init action from posts_detail.js
        $(this).postsDetail({
        });


        var navSelector = '#toc';
        var $myNav = $(navSelector);
        Toc.init($myNav);
        $('body').scrollspy({
            target: navSelector
        });

        //set scroll effective
        setScrollEffect();

        //script comment
        var po = ~~window.getParameterByName('po_i');
        var commentsArray = getCommentsByPost(po);
        $('.container.comment').comments({
            profilePictureURL: 'http://nguoilamvuon.org/data/personal/avatar/avatar-bee.jpeg',
            roundProfilePictures: true,
            textareaRows: 1,
            enableAttachments: true,
            getComments: function (success, error) {
                setTimeout(function () {
                    //console.log("get comment ");
                    console.log(commentsArray)
                    success(commentsArray);
                }, 500);
            },

            postComment: function (data, success, error) {
                setTimeout(function () {
                    success(data);
                    var dataJSON = commentToData(data);
                    post(dataJSON);
                }, 500);
            },
            putComment: function (data, success, error) {
                setTimeout(function () {

                    success(data);
                }, 500);
            },
            deleteComment: function (data, success, error) {
                setTimeout(function () {

                    success();
                }, 500);
            },
            upvoteComment: function (data, success, error) {
                setTimeout(function () {

                    success(data);

                }, 500);
            },
            uploadAttachments: function (dataArray, success, error) {
                setTimeout(function () {

                    success(dataArray);
                }, 500);
            },
        });



        function getCommentsByPost(postId) {
            var data;
            $.ajax({
                url: "/api/comments?po_i=" + postId,
                crossDomain: true,
                type: 'GET',
                contentType: "application/json",
                dataType: "json",
                async: false,
                success: function (result) {
                    data = result;
                    //console.log(result);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus)
                }
            });
            dataJSON = dataToComment(data);
            return dataJSON;
        }

        function post(data) {
            console.log(data);
            $.ajax({
                url: "/api/comments",
                crossDomain: true,
                type: 'POST',
                //contentType: "application/json",
                dataType: "json",
                data: data,
                success: function (result) {
                    console.log(result);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus)
                }
            });
        };

        function putComment(dataJSON) {


        };

        function deleteComment(id) {


        };


        function commentToData(data) {
            var result = {};

            result["CreationByAdmin"] = false;
            result["CreationByCurrentUser"] = false;
            //result["CreationByCurrentUser"] = data["created_by_current_user"];
            result["Content"] = data["content"];
            result["PostsId"] = ~~window.getParameterByName('po_i');
            result["ParentId"] = ~~data["parent"];
            result["ProfilePictureUrl"] = data["profile_picture_url"];
            result["UserId"] = ~~window.getParameterByName('u_i');
            //check user
            result["UserDisplayName"] = data["fullname"];
            result["UpvoteCount"] = data["upvote_count"];
            result["UserHasUpvote"] = data["user_has_upvoted"];

            console.log(result);
            return result;
        };

        function dataToComment(data) {
            var arr = [];
            $.each(data, function (i, v) {
                var result = {};

                result["id"] = v.id;
                result["creation_by_admin"] = false;
                result["created_by_current_user"] = v.creationByCurrentUser;
                result["content"] = v.content;
                result["parent"] = v.parentId;
                result["profile_picture_url"] = v.profilePictureUrl;
                result["created"] = v.creationDate;
                result["modified"] = v.modificationDate;
                result["fullname"] = v.userDisplayName;
                result["upvote_count"] = v.UpvoteCount;
                result["user_has_upvoted"] = v.UserHasUpvote;

                arr.push(result);
            });
            //console.log(arr);
            return arr;
        };





        //scroll
        function setScrollEffect() {
            //script scroll
            var offsetVal = 100;
            var animateTime = 500;
            var elementScrollShow = $('.scroll-show');
            var elementScrollPullUp = $('.scroll-pull-up');
            var elementScrollHide = $('.scroll-to-comment-hide');
            var heightArticle = $('article').height();

            $(window).scroll(function (event) {
                var scroll = $(window).scrollTop();
                // Do something
                if (scroll > offsetVal) {
                    //check scroll over article
                    if (scroll > heightArticle) {
                        elementScrollHide.hide(animateTime);
                        elementScrollHide.hide(animateTime);
                    } else {
                        elementScrollHide.show(animateTime);
                        elementScrollHide.show(animateTime);
                    }
                    elementScrollShow.show(animateTime);
                    elementScrollPullUp.css({ top: '50px', transition: 'opacity 2s ease-in-out' });
                } else {
                    elementScrollShow.hide(animateTime);
                    elementScrollPullUp.css({ top: '200px', transition: 'opacity 2s ease-in-out' });
                }

            });
        };

    });
</script>

